{"ast":null,"code":"import _slicedToArray from\"/home/lxxs/Desktop/repos/juego-de-memoria/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import{albums}from'./data';import{Header}from\"./components/header.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),score=_useState2[0],setScore=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),topscore=_useState4[0],setTopScore=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),clicked=_useState6[0],setClicked=_useState6[1];var randomCards=albums;function shuffle(){for(var i=randomCards.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var _ref=[randomCards[j],randomCards[i]];randomCards[i]=_ref[0];randomCards[j]=_ref[1];}}shuffle();console.log(process.env.PUBLIC_URL+albums[0].img);function updateArray(id){if(clicked.includes(id)){setClicked([]);if(score>topscore){setTopScore(score);}setScore(0);return;}var temp=[id];setClicked(clicked.concat(temp));setScore(score+1);}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{score:score,topscore:topscore}),/*#__PURE__*/_jsx(\"div\",{className:\"gamediv\",children:albums.map(function(item){return/*#__PURE__*/_jsxs(\"div\",{className:\"carddiv\",onClick:function onClick(){updateArray(item.id);},children:[/*#__PURE__*/_jsx(\"img\",{alt:\"\",src:process.env.PUBLIC_URL+item.img}),/*#__PURE__*/_jsx(\"p\",{className:\"text\",children:item.text})]},item.id);})}),/*#__PURE__*/_jsx(\"footer\",{children:\"luiseseberre2023\"})]});}export default App;","map":{"version":3,"names":["albums","Header","React","useState","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","score","setScore","_useState3","_useState4","topscore","setTopScore","_useState5","_useState6","clicked","setClicked","randomCards","shuffle","i","length","j","Math","floor","random","_ref","console","log","process","env","PUBLIC_URL","img","updateArray","id","includes","temp","concat","className","children","map","item","onClick","alt","src","text"],"sources":["/home/lxxs/Desktop/repos/juego-de-memoria/src/App.js"],"sourcesContent":["import './App.css';\nimport { albums } from './data';\nimport { Header } from \"./components/header.js\"\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const [score, setScore] = useState(0)\n  const [topscore, setTopScore] = useState(0)\n  const [clicked, setClicked] = useState([])\n  const randomCards = albums;\n\n  function shuffle() {\n    for (let i = randomCards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [randomCards[i], randomCards[j]] = [randomCards[j], randomCards[i]];\n    }\n  }\n \n  shuffle()\n\n  console.log(process.env.PUBLIC_URL + albums[0].img)\n\n  function updateArray(id){        \n    if (clicked.includes(id)){\n      setClicked([]);\n      if (score > topscore){\n        setTopScore(score)\n      }\n      setScore(0)      \n      return;\n    }\n    const temp = [id];\n    setClicked(clicked.concat(temp))\n    setScore(score+1)\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <Header score={score} topscore={topscore}/>\n      <div className='gamediv'>\n      {\n        albums.map((item) => {\n        return (<div className='carddiv' key={item.id} onClick={()=> {\n          updateArray(item.id);\n        }\n        }>          \n            <img alt='' src={process.env.PUBLIC_URL + item.img} ></img>\n            <p className='text'>{item.text}</p>\n\n            </div>  \n        )})\n      } \n      </div>   \n      <footer>luiseseberre2023</footer>   \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}